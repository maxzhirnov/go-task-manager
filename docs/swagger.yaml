basePath: /api
definitions:
  handlers.LoginRequest:
    description: Login request structure
    properties:
      password:
        description: |-
          Password for authentication
          @example "secretpassword123"
        type: string
      username:
        description: |-
          Username for authentication
          @example "john_doe"
        type: string
    type: object
  models.ErrorResponse:
    description: Error response structure
    properties:
      error:
        description: |-
          The error message
          @example "Invalid input data"
        type: string
    type: object
  models.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      position:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        description: Associate task with a user
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Task management system with JWT authentication
  title: Task Manager API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return access and refresh tokens
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns access_token and refresh_token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /refresh:
    post:
      consumes:
      - application/json
      description: Get new access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: refresh_token
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Returns new access_token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Invalid refresh token
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Refresh access token
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user in the system
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Username already exists
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register new user
      tags:
      - auth
  /tasks:
    get:
      consumes:
      - application/json
      description: Get all tasks for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a new task for the authenticated user
      parameters:
      - description: Task object
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid task ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Get a specific task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Invalid task ID
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get a task
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update an existing task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task object
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Invalid input data
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a task
      tags:
      - tasks
  /tasks/positions:
    put:
      consumes:
      - application/json
      description: Update the positions of multiple tasks for the authenticated user
      parameters:
      - description: Map of task IDs to new positions
        in: body
        name: positions
        required: true
        schema:
          additionalProperties:
            type: integer
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Positions updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Task not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update task positions
      tags:
      - tasks
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
